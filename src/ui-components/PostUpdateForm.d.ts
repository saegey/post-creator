/***************************************************************************
 * The contents of this file were generated with Amplify Studio.           *
 * Please refrain from making any modifications to this file.              *
 * Any changes to this file will be overwritten when running amplify pull. *
 **************************************************************************/

import * as React from "react";
import { GridProps, TextAreaFieldProps, TextFieldProps } from "@aws-amplify/ui-react";
import { EscapeHatchProps } from "@aws-amplify/ui-react/internal";
import { Post } from "../API.ts";
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type PostUpdateFormInputValues = {
    type?: string;
    title?: string;
    gpxFile?: string;
    images?: string;
    headerImage?: string;
    date?: string;
    publishedDate?: string;
    location?: string;
    postLocation?: string;
    stravaUrl?: string;
    resultsUrl?: string;
    subType?: string;
    teaser?: string;
    currentFtp?: string;
    components?: string;
    powerAnalysis?: string;
    coordinates?: string;
    powers?: string;
    elevation?: string;
    elevationGrades?: string;
    distances?: string;
    elevationTotal?: number;
    normalizedPower?: number;
    distance?: number;
    heartAnalysis?: string;
    cadenceAnalysis?: string;
    tempAnalysis?: string;
    elapsedTime?: number;
    stoppedTime?: number;
    timeInRed?: number;
    powerZones?: string;
    powerZoneBuckets?: string;
    createdAt?: string;
};
export declare type PostUpdateFormValidationValues = {
    type?: ValidationFunction<string>;
    title?: ValidationFunction<string>;
    gpxFile?: ValidationFunction<string>;
    images?: ValidationFunction<string>;
    headerImage?: ValidationFunction<string>;
    date?: ValidationFunction<string>;
    publishedDate?: ValidationFunction<string>;
    location?: ValidationFunction<string>;
    postLocation?: ValidationFunction<string>;
    stravaUrl?: ValidationFunction<string>;
    resultsUrl?: ValidationFunction<string>;
    subType?: ValidationFunction<string>;
    teaser?: ValidationFunction<string>;
    currentFtp?: ValidationFunction<string>;
    components?: ValidationFunction<string>;
    powerAnalysis?: ValidationFunction<string>;
    coordinates?: ValidationFunction<string>;
    powers?: ValidationFunction<string>;
    elevation?: ValidationFunction<string>;
    elevationGrades?: ValidationFunction<string>;
    distances?: ValidationFunction<string>;
    elevationTotal?: ValidationFunction<number>;
    normalizedPower?: ValidationFunction<number>;
    distance?: ValidationFunction<number>;
    heartAnalysis?: ValidationFunction<string>;
    cadenceAnalysis?: ValidationFunction<string>;
    tempAnalysis?: ValidationFunction<string>;
    elapsedTime?: ValidationFunction<number>;
    stoppedTime?: ValidationFunction<number>;
    timeInRed?: ValidationFunction<number>;
    powerZones?: ValidationFunction<string>;
    powerZoneBuckets?: ValidationFunction<string>;
    createdAt?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type PostUpdateFormOverridesProps = {
    PostUpdateFormGrid?: PrimitiveOverrideProps<GridProps>;
    type?: PrimitiveOverrideProps<TextFieldProps>;
    title?: PrimitiveOverrideProps<TextFieldProps>;
    gpxFile?: PrimitiveOverrideProps<TextFieldProps>;
    images?: PrimitiveOverrideProps<TextAreaFieldProps>;
    headerImage?: PrimitiveOverrideProps<TextFieldProps>;
    date?: PrimitiveOverrideProps<TextFieldProps>;
    publishedDate?: PrimitiveOverrideProps<TextFieldProps>;
    location?: PrimitiveOverrideProps<TextFieldProps>;
    postLocation?: PrimitiveOverrideProps<TextFieldProps>;
    stravaUrl?: PrimitiveOverrideProps<TextFieldProps>;
    resultsUrl?: PrimitiveOverrideProps<TextFieldProps>;
    subType?: PrimitiveOverrideProps<TextFieldProps>;
    teaser?: PrimitiveOverrideProps<TextFieldProps>;
    currentFtp?: PrimitiveOverrideProps<TextFieldProps>;
    components?: PrimitiveOverrideProps<TextAreaFieldProps>;
    powerAnalysis?: PrimitiveOverrideProps<TextAreaFieldProps>;
    coordinates?: PrimitiveOverrideProps<TextAreaFieldProps>;
    powers?: PrimitiveOverrideProps<TextAreaFieldProps>;
    elevation?: PrimitiveOverrideProps<TextAreaFieldProps>;
    elevationGrades?: PrimitiveOverrideProps<TextAreaFieldProps>;
    distances?: PrimitiveOverrideProps<TextAreaFieldProps>;
    elevationTotal?: PrimitiveOverrideProps<TextFieldProps>;
    normalizedPower?: PrimitiveOverrideProps<TextFieldProps>;
    distance?: PrimitiveOverrideProps<TextFieldProps>;
    heartAnalysis?: PrimitiveOverrideProps<TextAreaFieldProps>;
    cadenceAnalysis?: PrimitiveOverrideProps<TextAreaFieldProps>;
    tempAnalysis?: PrimitiveOverrideProps<TextAreaFieldProps>;
    elapsedTime?: PrimitiveOverrideProps<TextFieldProps>;
    stoppedTime?: PrimitiveOverrideProps<TextFieldProps>;
    timeInRed?: PrimitiveOverrideProps<TextFieldProps>;
    powerZones?: PrimitiveOverrideProps<TextAreaFieldProps>;
    powerZoneBuckets?: PrimitiveOverrideProps<TextAreaFieldProps>;
    createdAt?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type PostUpdateFormProps = React.PropsWithChildren<{
    overrides?: PostUpdateFormOverridesProps | undefined | null;
} & {
    id?: string;
    post?: Post;
    onSubmit?: (fields: PostUpdateFormInputValues) => PostUpdateFormInputValues;
    onSuccess?: (fields: PostUpdateFormInputValues) => void;
    onError?: (fields: PostUpdateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: PostUpdateFormInputValues) => PostUpdateFormInputValues;
    onValidate?: PostUpdateFormValidationValues;
} & React.CSSProperties>;
export default function PostUpdateForm(props: PostUpdateFormProps): React.ReactElement;
